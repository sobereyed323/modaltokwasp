app ModalTokai {
  wasp: {
    version: "^0.11.1"
  },
  title: "ModalTokai",
  client: {
    rootComponent: import { Layout } from "@client/Layout.jsx"
  },
  db: {
    prisma: {
      clientPreviewFeatures: ["extendedWhereUnique"]
    }
  },
  auth: {
    userEntity: User,
    methods: {
      usernameAndPassword: {}
    },
    onAuthFailedRedirectTo: "/login",
    onAuthSucceededRedirectTo: "/"
  }
}

route LoginRoute { path: "/login", to: LoginPage }
page LoginPage {
  component: import Login from "@client/pages/auth/Login.jsx"
}
route SignupRoute { path: "/signup", to: SignupPage }
page SignupPage {
  component: import Signup from "@client/pages/auth/Signup.jsx"
}

entity User {=psl
    id                    Int                     @id @default(autoincrement())
    username              String                  @unique
    password              String
    chats                 Chat[]
    PDF                   PDF[]
    SocialMediaCredential SocialMediaCredential[]
psl=}

entity Chat {=psl
    id      Int    @id @default(autoincrement())
    content String
    user    User   @relation(fields: [userId], references: [id])
    userId  Int
psl=}

entity PDF {=psl
    id     Int    @id @default(autoincrement())
    path   String
    user   User   @relation(fields: [userId], references: [id])
    userId Int
psl=}

entity SocialMediaCredential {=psl
    id       Int    @id @default(autoincrement())
    platform String
    apiKey   String
    user     User   @relation(fields: [userId], references: [id])
    userId   Int
psl=}

action uploadPDF {
  fn: import { uploadPDF } from "@server/actions.js",
  entities: [PDF]
}

action cloneCreator {
  fn: import { cloneCreator } from "@server/actions.js",
  entities: [User, Chat, PDF]
}

action takeOverChat {
  fn: import { takeOverChat } from "@server/actions.js",
  entities: [Chat]
}

query getChats {
  fn: import { getChats } from "@server/queries.js",
  entities: [Chat, User]
}

query getPDFs {
  fn: import { getPDFs } from "@server/queries.js",
  entities: [PDF]
}

query getSocialMediaCredentials {
  fn: import { getSocialMediaCredentials } from "@server/queries.js",
  entities: [SocialMediaCredential]
}

route CloneRoute { path: "/clone", to: ClonePage }
page ClonePage {
  component: import { ClonePage } from "@client/pages/ClonePage.jsx",
  authRequired: true
}

route WatchRoute { path: "/watch", to: WatchPage }
page WatchPage {
  component: import { WatchPage } from "@client/pages/WatchPage.jsx",
  authRequired: true
}

route WelcomeRoute { path: "/", to: WelcomePage }
page WelcomePage {
  component: import { WelcomePage } from "@client/pages/WelcomePage.jsx",
  authRequired: false
}

route SocialMediaRoute { path: "/social-media", to: SocialMediaPage }
page SocialMediaPage {
  component: import { SocialMediaPage } from "@client/pages/SocialMediaPage.jsx",
  authRequired: true
}

route BankRoute { path: "/bank", to: BankPage }
page BankPage {
  component: import { BankPage } from "@client/pages/BankPage.jsx",
  authRequired: true
}

route AdminRoute { path: "/admin", to: AdminPage }
page AdminPage {
  component: import { AdminPage } from "@client/pages/AdminPage.jsx",
  authRequired: true
}